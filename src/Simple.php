<?php

namespace Huangdijia\Ssdb;

/**
 * @method public self __construct($host, $port, $timeoutMs)
 * @method public bool|null auth($password)
 * @method public bool|mixed set($key, $value)
 * @method public bool|mixed setx($key, $value, $ttl)
 * @method public bool|mixed setnx($key, $value)
 * @method public bool|int expire($key, $ttl)
 * @method public bool|int ttl($key)
 * @method public null|bool|mixed get($key)
 * @method public null|bool|mixed getset($key, $value)
 * @method public bool|mixed del($key)
 * @method public bool|int incr($key, $num)
 * @method public bool exists($key)
 * @method public int getbit($key, int $offset)
 * @method public bool|int setbit($key, int $offset, int $val)
 * @method public bool|int bitcount($key, $start, $end)
 * @method public string substr($key, $start, $size)
 * @method public int strlen($key)
 * @method public bool|array keys($keyStart, $keyEnd, $limit)
 * @method public bool|array rkeys($keyStart, $keyEnd, $limit)
 * @method public bool|array scan($keyStart, $keyEnd, $limit)
 * @method public bool|array rscan($keyStart, $keyEnd, $limit)
 * @method public bool|mixed multi_set(array $kvs)
 * @method public bool|array multi_get(array $keys)
 * @method public bool|mixed multi_del(array $keys)
 * @method public bool|mixed hset($name, $key, $value)
 * @method public null|bool|mixed hget($name, $key)
 * @method public bool|mixed hdel($name, $key)
 * @method public bool|inthincr($name, $key, int $num)
 * @method public bool hexists($name, $key)
 * @method public int hsize($name)
 * @method public bool|array hlist($nameStart, $nameEnd, int $limit)
 * @method public bool|array hrlist($nameStart, $nameEnd, int $limit)
 * @method public bool hkeys($name, $keyStart, $keyEnd, int $limit)
 * @method public bool|array hgetall($name)
 * @method public bool|array hscan($name, $keyStart, $keyEnd, int $limit)
 * @method public bool|array hrscan($name, $keyStart, $keyEnd, int $limit)
 * @method public bool|int hclear($name)
 * @method public bool|mixed multi_hset($name, array $kvs)
 * @method public bool|array multi_hget($name, array $keys)
 * @method public bool|mixed multi_hdel($name, array $keys)
 * @method public bool|mixed zset($name, $key, int $score)
 * @method public bool|null|int zget($name, $key)
 * @method public bool|mixed zdel($name, $key)
 * @method public bool|int zincr($name, $key, int $num)
 * @method public bool zsize($name, $key)
 * @method public bool|array zlist($nameStart, $nameEnd, $limit)
 * @method public bool|array zrlist($nameStart, $nameEnd, $limit)
 * @method public bool zexists($name, $key)
 * @method public bool|array zkeys($name, $keyStart, $scoreStart, $scoreEnd, $limit)
 * @method public bool|array zscan($name, $keyStart, $scoreStart, $scoreEnd, $limit)
 * @method public bool|array zrscan($name, $keyStart, $scoreStart, $scoreEnd, $limit)
 * @method public bool|null|int zrank($name, $key)
 * @method public bool|null|int zrrank($name, $key)
 * @method public bool|array zrange($name, int $offset, int $limit)
 * @method public bool|array zrrange($name, int $offset, int $limit)
 * @method public bool|int zclear($name)
 * @method public bool|int zcount($name, int $scoreStart, int $scoreEnd)
 * @method public bool|int zsum($name, int $scoreStart, int $scoreEnd)
 * @method public bool|int zavg($name, int $scoreStart, int $scoreEnd)
 * @method public bool|int zremrangebyrank($name, $start, $end)
 * @method public bool|int zremrangebyscore($name, $start, $end)
 * @method public bool|array zpop_front($name, $limit)
 * @method public bool|array zpop_back($name, $limit)
 * @method public bool|array multi_zset($name, array $kvs)
 * @method public bool|array multi_zget($name, array $keys)
 * @method public bool|array multi_zdel($name, array $keys)
 * @method public bool|int qsize($name)
 * @method public bool|array qlist($nameStart, $nameEnd, int $limit)
 * @method public bool|array qrlist($nameStart, $nameEnd, int $limit)
 * @method public bool|void qclear($name)
 * @method public bool|mixed qfront($name)
 * @method public bool|mixed qback($name)
 * @method public bool|null|mixed qget($name, int $index)
 * @method public bool|mixed qset($name, int $index, $val)
 * @method public bool|array qrange($name, int $offset, int $limit)
 * @method public bool|array qslice($name, $start, $end)
 * @method public bool|int qpush($name, $item)
 * @method public bool|int qpush_front($name, $item)
 * @method public bool|int qpush_back($name, $item)
 * @method public bool|null|mixed|array qpop($name, int $size)
 * @method public bool|null|mixed|array qpop_front($name, int $size)
 * @method public bool|null|mixed|array qpop_back($name, int $size)
 * @method public bool|int qtrim_front($name, int $size)
 * @method public bool|int qtrim_back($name, int $size)
 * @method public self batch()
 * @method public bool|array exec()
 * @method public bool|int dbsize()
 * @method public bool|array info($opt)
 * @package Huangdijia\Ssdb
 */
class Simple extends Ssdb
{
    public function __construct($host, $port, $timeout_ms = 2000)
    {
        parent::__construct($host, $port, $timeout_ms);
        $this->easy();
    }
}
