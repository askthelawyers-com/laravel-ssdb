<?php

namespace Huangdijia\Ssdb\Facades;

use Huangdijia\Ssdb\Simple;
use Illuminate\Support\Facades\Facade;

/**
 * @method public static mixed set_timeout(int $timeout_ms)
 * @method public static mixed easy()
 * @method public static mixed close()
 * @method public static mixed closed()
 * @method public static boolean|null auth(string $password)
 * @method public static mixed set(string $key, string $value)
 * @method public static mixed setx(string $key, string $value, int $ttl)
 * @method public static mixed setnx(string $key, string $value)
 * @method public static mixed expire(string $key, int $ttl)
 * @method public static mixed ttl(string $key)
 * @method public static mixed get(string $key)
 * @method public static mixed getset(string $key, string $value)
 * @method public static mixed del(string $key)
 * @method public static mixed incr(string $key, int $num)
 * @method public static mixed exists(string $key)
 * @method public static mixed getbit(string $key, int $offset)
 * @method public static mixed setbit(string $key, int $offset, int $val)
 * @method public static mixed bitcount(string $key, int $start, int $end)
 * @method public static mixed substr(string $key)
 * @method public static mixed strlen(string $key)
 * @method public static mixed keys(string $key_start, string $key_end, int $limit)
 * @method public static mixed rkeys(string $key_start, string $key_end, int $limit)
 * @method public static mixed scan(string $key_start, string $key_end, int $limit)
 * @method public static mixed rscan(string $key_start, string $key_end, int $limit)
 * @method public static mixed multi_set(array $kvs)
 * @method public static mixed multi_get(array $keys)
 * @method public static mixed multi_del(array $keys)
 * @method public static mixed hset(string $name, string $key, string $value)
 * @method public static mixed hget(string $name, string $key)
 * @method public static mixed hdel(string $name, string $key)
 * @method public static mixed hincr(string $name, string $key, int $num)
 * @method public static mixed hexists(string $name, string $key)
 * @method public static mixed hsize(string $name)
 * @method public static mixed hlist(string $name_start, string $name_end, int $limit)
 * @method public static mixed hrlist(string $name_start, string $name_end, int $limit)
 * @method public static mixed hkeys(string $name, string $key_start, string $key_end, int $limit)
 * @method public static mixed hgetall(string $name)
 * @method public static mixed hscan(string $name, string $key_start, string $key_end, int $limit)
 * @method public static mixed hrscan(string $name, string $key_start, string $key_end, int $limit)
 * @method public static mixed hclear(string $name)
 * @method public static mixed multi_hset(string $name, array $kvs)
 * @method public static mixed multi_hget(string $name, array $keys)
 * @method public static mixed multi_hdel(string $name, array $keys)
 * @method public static mixed zset(string $name, string $key, int $score)
 * @method public static mixed zget(string $name, string $key)
 * @method public static mixed zdel(string $name, string $key)
 * @method public static mixed zincr(string $name, string $key, int $num)
 * @method public static mixed zsize(string $name)
 * @method public static mixed zlist(string $name_start, string $name_end, int $limit)
 * @method public static mixed zrlist(string $name_start, string $name_end, int $limit)
 * @method public static mixed zexists(string $name, string $key)
 * @method public static mixed zkeys(string $name, string $key_start, int $score_start, int $score_end, int $limit)
 * @method public static mixed zscan(string $name, string $key_start, int $score_start, int $score_end, int $limit)
 * @method public static mixed zrscan(string $name, string $key_start, int $score_start, int $score_end, int $limit)
 * @method public static mixed zrank(string $name, string $key)
 * @method public static mixed zrrank(string $name, string $key)
 * @method public static mixed zrange(string $name, int $offset, int $limit)
 * @method public static mixed zrrange(string $name, int $offset, int $limit)
 * @method public static mixed zclear(string $name)
 * @method public static mixed zcount(string $name, int $score_start, int $score_end)
 * @method public static mixed zsum(string $name, int $score_start, int $score_end)
 * @method public static mixed zavg(string $name, int $score_start, int $score_end)
 * @method public static mixed zremrangebyrank(string $name, int $start, int $end)
 * @method public static mixed zremrangebyscore(string $name, int $start, int $end)
 * @method public static mixed zpop_front(string $name, int $limit)
 * @method public static mixed zpop_back(string $name, int $limit)
 * @method public static mixed multi_zset(string $name, array $kvs)
 * @method public static mixed multi_zget(string $name, array $keys)
 * @method public static mixed multi_zdel(string $name, array $keys)
 * @method public static mixed qsize(string $name)
 * @method public static mixed qlist(string $name_start, string $name_end, int $limit)
 * @method public static mixed qrlist(string $name_start, string $name_end, int $limit)
 * @method public static mixed qclear(string $name)
 * @method public static mixed qfront(string $name)
 * @method public static mixed qback(string $name)
 * @method public static mixed qget(string $name, int $index)
 * @method public static mixed qset(string $name, int $index, string $val)
 * @method public static mixed qrange(string $name, int $offset, int $limit)
 * @method public static mixed qslice(string $name, int $begin, int $end)
 * @method public static mixed qpush(string $name, string $item)
 * @method public static mixed qpush_front(string $name, int $size)
 * @method public static mixed qpush_back(string $name, string $item)
 * @method public static mixed qpop(string $name, int $size)
 * @method public static mixed qpop_front(string $name, int $size)
 * @method public static mixed qpop_back(string $name, int $size)
 * @method public static mixed qtrim_front(string $name, int $size)
 * @method public static mixed qtrim_back(string $name, int $size)
 * @method public static mixed batch()
 * @method public static mixed exec()
 * @method public static mixed dbsize()
 * @method public static mixed info(string $opt)
 * @see \Huangdijia\Ssdb\Ssdb
 */

class Ssdb extends Facade
{
    protected static function getFacadeAccessor()
    {
        return Simple::class; 
    }
}